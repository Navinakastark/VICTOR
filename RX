#include <Servo.h>
#include <SPI.h>
#include <nRF24L01.h>
#include <RF24.h>
RF24 radio(8,9); // CE, CSN
Servo myservo;  // create servo object to control a servo
const byte address[6] = "NAVIN";
char xyData[32] = "";
int pos = 0;    // variable to store the servo position
int IRSensor1 = 2; // connect ir sensor to arduino pin 2
int IRSensor2 = 3; // connect ir sensor to arduino pin 2
int LED = 7; // conect Led to arduino pin 13
const int trigPin = 4;
const int echoPin = 5;
// defines variables
long duration;
String distanceInch;
String distance;
const int ledPin = 7;

const int ldrPin = A0;


void setup() {
  Serial.begin(9600);
  radio.begin();
  radio.openWritingPipe(address);
  radio.setPALevel(RF24_PA_MIN);
  myservo.attach(6);  // attaches the servo on pin 9 to the servo object
  pinMode (IRSensor1, INPUT); // sensor pin INPUT
  pinMode (IRSensor2, INPUT); // sensor pin INPUT
  pinMode (LED, OUTPUT); // Led pin OUTPUT
  pinMode(trigPin, OUTPUT); // Sets the trigPin as an Output
  pinMode(echoPin, INPUT); // Sets the echoPin as an Inpu
  pinMode(ledPin, OUTPUT);

pinMode(ldrPin, INPUT);
}

void loop() {
  for (pos = 0; pos <= 180; pos += 1) { // goes from 0 degrees to 180 degrees
    // in steps of 1 degree
    myservo.write(pos);              // tell servo to go to position in variable 'pos'
    delay(15);                       // waits 15ms for the servo to reach the position
  }
  for (pos = 180; pos >= 0; pos -= 1) { // goes from 180 degrees to 0 degrees
    myservo.write(pos);              // tell servo to go to position in variable 'pos'
    delay(15);                       // waits 15ms for the servo to reach the position
  }
  int statusSensor1 = digitalRead (IRSensor1);
  int statusSensor2 = digitalRead (IRSensor2);
  
  if (statusSensor1 == 1){
    Serial.println("Object Confronted at Front");
  }
  
  else
  {
    Serial.println("Object NOT Confronted at Front");
  }
  if (statusSensor2 == 1){
    Serial.println("Object Confronted at Back");
  }
  
  else
  {
    Serial.println("Object NOT Confronted at Back");
  }
  digitalWrite(trigPin, LOW);
delayMicroseconds(2);
// Sets the trigPin on HIGH state for 10 micro seconds
digitalWrite(trigPin, HIGH);
delayMicroseconds(10);
digitalWrite(trigPin, LOW);
// Reads the echoPin, returns the sound wave travel time in microseconds
duration = pulseIn(echoPin, HIGH);
// Calculating the distance
distance= duration*0.034/2;
distanceInch = duration*0.0133/2;
// Prints the distance on the Serial Monitor
Serial.print("Distance in cm: ");
Serial.println(distance);
Serial.print("Distance in inch: ");
Serial.println(distanceInch);

int ldrStatus = analogRead(ldrPin);

if (ldrStatus <=300) {

digitalWrite(ledPin, HIGH);

Serial.println("LDR is DARK, LED is ON");

}

else {

digitalWrite(ledPin, LOW);

Serial.println("---------------");

}
 
radio.stopListening(); 
distance.toCharArray(xyData, 5);
radio.write(&xyData,sizeof(xyData));
distanceInch.toCharArray(xyData, 5);
radio.write(&xyData,sizeof(xyData));
if (statusSensor1 == 1){
const char text1[] = "DANGER1";
radio.write(&text1, sizeof(text1));
}
if (statusSensor2 == 1){
const char text[] = "DANGER2";
radio.write(&text, sizeof(text));
}
if (ldrStatus <=300){
const char text2[] = "NIGHT VISION";
radio.write(&text2, sizeof(text2));
}
}
